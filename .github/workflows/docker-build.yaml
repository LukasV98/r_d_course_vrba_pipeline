on:
  push:

    branches: [ main, master ]
  pull_request:

env:
  IMAGE_NAME: python-calculator
  python-version: "3.10"

jobs:
  build-and-test:
    runs-on: ubuntu-latest


    steps:
    - name: Check Repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.python-version }}

    - name: Run unit tests
      run:  python -m unittest Test.py

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        echo 🐳 Buildování Docker image...;
        docker build -t \${{ env.IMAGE_NAME }}:latest .
        docker build -t \${{ env.IMAGE_NAME }}:\${{ github.sha }} .

    - name: Test Docker container
      run: |
        echo 🐳 Testování Docker kontejneru...
        docker run --rm \${{ env.IMAGE_NAME }}:latest

    - name: List Docker images
      run: |
        echo 🐳 Seznam vytvořených images:
        docker images | grep \${{ env.IMAGE_NAME }}

    - uses: actions/checkout@v1
    - name: Build your project
      run: mkdir -p dist
    - name: Create ZIP archive
      run: zip -r file.zip . -i script/
    - name: Upload ZIP as artifact
      uses: actions/upload-artifact@v4
      with:
        name: file-zip
        path: file.zip

  deploy-to-ecr:
      needs: build-and-test
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
              aws-region: eu-central-1

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.5.0

        - name: Terraform Init
          working-directory: ./terraform
          run: terraform init

        - name: Terraform Plan
          working-directory: ./terraform
          run: terraform plan

        - name: Terraform Apply
          working-directory: ./terraform
          run: terraform apply -auto-approve

        - name: Get ECR repository URL
          id: ecr-url
          working-directory: ./terraform
          run: |
            ecr_url=$(terraform output -raw ecr_repository_url)
            echo "ecr_url=$ecr_url" >> $GITHUB_OUTPUT

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build and push Docker image to ECR
          run: |
            ecr_url=$(terraform output -raw ecr_repository_url)
            docker build -t \$ECR_URL:latest .
            docker build -t \$ECR_URL:${{ github.sha }} .
    
            echo "�� Pushing images to ECR..."
    
            docker push $ECR_URL:latest
            docker push $ECR_URL:\${{ github.sha }}
    
            echo "✅ Images pushed successfully!"
            echo "Repository URL:\$ECR_URL"